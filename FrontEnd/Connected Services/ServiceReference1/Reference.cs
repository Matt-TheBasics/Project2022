//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodingPackFrontRevised.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Donation", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Donation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DonationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CodingPackFrontRevised.ServiceReference1.Donor DonorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DonorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MonateryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Branch {
            get {
                return this.BranchField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchField, value) != true)) {
                    this.BranchField = value;
                    this.RaisePropertyChanged("Branch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DonationId {
            get {
                return this.DonationIdField;
            }
            set {
                if ((this.DonationIdField.Equals(value) != true)) {
                    this.DonationIdField = value;
                    this.RaisePropertyChanged("DonationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CodingPackFrontRevised.ServiceReference1.Donor Donor {
            get {
                return this.DonorField;
            }
            set {
                if ((object.ReferenceEquals(this.DonorField, value) != true)) {
                    this.DonorField = value;
                    this.RaisePropertyChanged("Donor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DonorID {
            get {
                return this.DonorIDField;
            }
            set {
                if ((this.DonorIDField.Equals(value) != true)) {
                    this.DonorIDField = value;
                    this.RaisePropertyChanged("DonorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Monatery {
            get {
                return this.MonateryField;
            }
            set {
                if ((this.MonateryField.Equals(value) != true)) {
                    this.MonateryField = value;
                    this.RaisePropertyChanged("Monatery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Pickup {
            get {
                return this.PickupField;
            }
            set {
                if ((this.PickupField.Equals(value) != true)) {
                    this.PickupField = value;
                    this.RaisePropertyChanged("Pickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Donor", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Donor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CodingPackFrontRevised.ServiceReference1.Donation[] DonationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DonorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsertypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CodingPackFrontRevised.ServiceReference1.Donation[] Donations {
            get {
                return this.DonationsField;
            }
            set {
                if ((object.ReferenceEquals(this.DonationsField, value) != true)) {
                    this.DonationsField = value;
                    this.RaisePropertyChanged("Donations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DonorID {
            get {
                return this.DonorIDField;
            }
            set {
                if ((this.DonorIDField.Equals(value) != true)) {
                    this.DonorIDField = value;
                    this.RaisePropertyChanged("DonorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usertype {
            get {
                return this.UsertypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UsertypeField, value) != true)) {
                    this.UsertypeField = value;
                    this.RaisePropertyChanged("Usertype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Animal", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Animal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnimalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApproxAge_YearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BreedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Intake_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SterilisedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Age {
            get {
                return this.AgeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeField, value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnimalID {
            get {
                return this.AnimalIDField;
            }
            set {
                if ((this.AnimalIDField.Equals(value) != true)) {
                    this.AnimalIDField = value;
                    this.RaisePropertyChanged("AnimalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApproxAge_Year {
            get {
                return this.ApproxAge_YearField;
            }
            set {
                if ((this.ApproxAge_YearField.Equals(value) != true)) {
                    this.ApproxAge_YearField = value;
                    this.RaisePropertyChanged("ApproxAge_Year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Breed {
            get {
                return this.BreedField;
            }
            set {
                if ((object.ReferenceEquals(this.BreedField, value) != true)) {
                    this.BreedField = value;
                    this.RaisePropertyChanged("Breed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Intake_Number {
            get {
                return this.Intake_NumberField;
            }
            set {
                if ((this.Intake_NumberField.Equals(value) != true)) {
                    this.Intake_NumberField = value;
                    this.RaisePropertyChanged("Intake_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Size {
            get {
                return this.SizeField;
            }
            set {
                if ((object.ReferenceEquals(this.SizeField, value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Sterilised {
            get {
                return this.SterilisedField;
            }
            set {
                if ((this.SterilisedField.Equals(value) != true)) {
                    this.SterilisedField = value;
                    this.RaisePropertyChanged("Sterilised");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VolunteerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((this.ContactField.Equals(value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Volunteer {
            get {
                return this.VolunteerField;
            }
            set {
                if ((this.VolunteerField.Equals(value) != true)) {
                    this.VolunteerField = value;
                    this.RaisePropertyChanged("Volunteer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Campaign", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Campaign : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CampaignIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FundraiserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnlineEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TimeToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CampaignId {
            get {
                return this.CampaignIdField;
            }
            set {
                if ((this.CampaignIdField.Equals(value) != true)) {
                    this.CampaignIdField = value;
                    this.RaisePropertyChanged("CampaignId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Fundraiser {
            get {
                return this.FundraiserField;
            }
            set {
                if ((this.FundraiserField.Equals(value) != true)) {
                    this.FundraiserField = value;
                    this.RaisePropertyChanged("Fundraiser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnlineEvent {
            get {
                return this.OnlineEventField;
            }
            set {
                if ((this.OnlineEventField.Equals(value) != true)) {
                    this.OnlineEventField = value;
                    this.RaisePropertyChanged("OnlineEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeFrom {
            get {
                return this.TimeFromField;
            }
            set {
                if ((this.TimeFromField.Equals(value) != true)) {
                    this.TimeFromField = value;
                    this.RaisePropertyChanged("TimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeTo {
            get {
                return this.TimeToField;
            }
            set {
                if ((this.TimeToField.Equals(value) != true)) {
                    this.TimeToField = value;
                    this.RaisePropertyChanged("TimeTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Registered", ReplyAction="http://tempuri.org/IService/RegisteredResponse")]
        bool Registered(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Registered", ReplyAction="http://tempuri.org/IService/RegisteredResponse")]
        System.Threading.Tasks.Task<bool> RegisteredAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Register", ReplyAction="http://tempuri.org/IService/RegisterResponse")]
        int Register(string name, string surname, string email, string address, string password, string usertype, string contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Register", ReplyAction="http://tempuri.org/IService/RegisterResponse")]
        System.Threading.Tasks.Task<int> RegisterAsync(string name, string surname, string email, string address, string password, string usertype, string contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        int Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getDonorDonations", ReplyAction="http://tempuri.org/IService/getDonorDonationsResponse")]
        CodingPackFrontRevised.ServiceReference1.Donation[] getDonorDonations(int DonorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getDonorDonations", ReplyAction="http://tempuri.org/IService/getDonorDonationsResponse")]
        System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference1.Donation[]> getDonorDonationsAsync(int DonorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllAnimals", ReplyAction="http://tempuri.org/IService/getAllAnimalsResponse")]
        CodingPackFrontRevised.ServiceReference1.Animal[] getAllAnimals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllAnimals", ReplyAction="http://tempuri.org/IService/getAllAnimalsResponse")]
        System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference1.Animal[]> getAllAnimalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllEmployees", ReplyAction="http://tempuri.org/IService/getAllEmployeesResponse")]
        CodingPackFrontRevised.ServiceReference1.Employee[] getAllEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllEmployees", ReplyAction="http://tempuri.org/IService/getAllEmployeesResponse")]
        System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference1.Employee[]> getAllEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllCampaigns", ReplyAction="http://tempuri.org/IService/getAllCampaignsResponse")]
        CodingPackFrontRevised.ServiceReference1.Campaign[] getAllCampaigns();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllCampaigns", ReplyAction="http://tempuri.org/IService/getAllCampaignsResponse")]
        System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference1.Campaign[]> getAllCampaignsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllDonations", ReplyAction="http://tempuri.org/IService/getAllDonationsResponse")]
        CodingPackFrontRevised.ServiceReference1.Donation[] getAllDonations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllDonations", ReplyAction="http://tempuri.org/IService/getAllDonationsResponse")]
        System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference1.Donation[]> getAllDonationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddEmployee", ReplyAction="http://tempuri.org/IService/AddEmployeeResponse")]
        bool AddEmployee(string name, string surname, string contactnumber, string email, bool volunteer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddEmployee", ReplyAction="http://tempuri.org/IService/AddEmployeeResponse")]
        System.Threading.Tasks.Task<bool> AddEmployeeAsync(string name, string surname, string contactnumber, string email, bool volunteer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddAnimal", ReplyAction="http://tempuri.org/IService/AddAnimalResponse")]
        bool AddAnimal(int intakenumber, string name, string breed, bool sex, int approxage, int age, bool sterilised, string description, string size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddAnimal", ReplyAction="http://tempuri.org/IService/AddAnimalResponse")]
        System.Threading.Tasks.Task<bool> AddAnimalAsync(int intakenumber, string name, string breed, bool sex, int approxage, int age, bool sterilised, string description, string size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCampaign", ReplyAction="http://tempuri.org/IService/AddCampaignResponse")]
        bool AddCampaign(string name, string description, System.DateTime datefrom, System.DateTime dateto, bool online, bool fundraiser, string location, System.DateTime timeto, System.DateTime timefrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCampaign", ReplyAction="http://tempuri.org/IService/AddCampaignResponse")]
        System.Threading.Tasks.Task<bool> AddCampaignAsync(string name, string description, System.DateTime datefrom, System.DateTime dateto, bool online, bool fundraiser, string location, System.DateTime timeto, System.DateTime timefrom);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : CodingPackFrontRevised.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<CodingPackFrontRevised.ServiceReference1.IService>, CodingPackFrontRevised.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Registered(string email, string password) {
            return base.Channel.Registered(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisteredAsync(string email, string password) {
            return base.Channel.RegisteredAsync(email, password);
        }
        
        public int Register(string name, string surname, string email, string address, string password, string usertype, string contact) {
            return base.Channel.Register(name, surname, email, address, password, usertype, contact);
        }
        
        public System.Threading.Tasks.Task<int> RegisterAsync(string name, string surname, string email, string address, string password, string usertype, string contact) {
            return base.Channel.RegisterAsync(name, surname, email, address, password, usertype, contact);
        }
        
        public int Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public CodingPackFrontRevised.ServiceReference1.Donation[] getDonorDonations(int DonorID) {
            return base.Channel.getDonorDonations(DonorID);
        }
        
        public System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference1.Donation[]> getDonorDonationsAsync(int DonorID) {
            return base.Channel.getDonorDonationsAsync(DonorID);
        }
        
        public CodingPackFrontRevised.ServiceReference1.Animal[] getAllAnimals() {
            return base.Channel.getAllAnimals();
        }
        
        public System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference1.Animal[]> getAllAnimalsAsync() {
            return base.Channel.getAllAnimalsAsync();
        }
        
        public CodingPackFrontRevised.ServiceReference1.Employee[] getAllEmployees() {
            return base.Channel.getAllEmployees();
        }
        
        public System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference1.Employee[]> getAllEmployeesAsync() {
            return base.Channel.getAllEmployeesAsync();
        }
        
        public CodingPackFrontRevised.ServiceReference1.Campaign[] getAllCampaigns() {
            return base.Channel.getAllCampaigns();
        }
        
        public System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference1.Campaign[]> getAllCampaignsAsync() {
            return base.Channel.getAllCampaignsAsync();
        }
        
        public CodingPackFrontRevised.ServiceReference1.Donation[] getAllDonations() {
            return base.Channel.getAllDonations();
        }
        
        public System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference1.Donation[]> getAllDonationsAsync() {
            return base.Channel.getAllDonationsAsync();
        }
        
        public bool AddEmployee(string name, string surname, string contactnumber, string email, bool volunteer) {
            return base.Channel.AddEmployee(name, surname, contactnumber, email, volunteer);
        }
        
        public System.Threading.Tasks.Task<bool> AddEmployeeAsync(string name, string surname, string contactnumber, string email, bool volunteer) {
            return base.Channel.AddEmployeeAsync(name, surname, contactnumber, email, volunteer);
        }
        
        public bool AddAnimal(int intakenumber, string name, string breed, bool sex, int approxage, int age, bool sterilised, string description, string size) {
            return base.Channel.AddAnimal(intakenumber, name, breed, sex, approxage, age, sterilised, description, size);
        }
        
        public System.Threading.Tasks.Task<bool> AddAnimalAsync(int intakenumber, string name, string breed, bool sex, int approxage, int age, bool sterilised, string description, string size) {
            return base.Channel.AddAnimalAsync(intakenumber, name, breed, sex, approxage, age, sterilised, description, size);
        }
        
        public bool AddCampaign(string name, string description, System.DateTime datefrom, System.DateTime dateto, bool online, bool fundraiser, string location, System.DateTime timeto, System.DateTime timefrom) {
            return base.Channel.AddCampaign(name, description, datefrom, dateto, online, fundraiser, location, timeto, timefrom);
        }
        
        public System.Threading.Tasks.Task<bool> AddCampaignAsync(string name, string description, System.DateTime datefrom, System.DateTime dateto, bool online, bool fundraiser, string location, System.DateTime timeto, System.DateTime timefrom) {
            return base.Channel.AddCampaignAsync(name, description, datefrom, dateto, online, fundraiser, location, timeto, timefrom);
        }
    }
}
