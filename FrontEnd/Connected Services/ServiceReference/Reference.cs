//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodingPackFrontRevised.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Donation", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Donation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DonationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DonorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_TimesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Branch {
            get {
                return this.BranchField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchField, value) != true)) {
                    this.BranchField = value;
                    this.RaisePropertyChanged("Branch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DonationID {
            get {
                return this.DonationIDField;
            }
            set {
                if ((this.DonationIDField.Equals(value) != true)) {
                    this.DonationIDField = value;
                    this.RaisePropertyChanged("DonationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DonorID {
            get {
                return this.DonorIDField;
            }
            set {
                if ((this.DonorIDField.Equals(value) != true)) {
                    this.DonorIDField = value;
                    this.RaisePropertyChanged("DonorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pickup {
            get {
                return this.PickupField;
            }
            set {
                if ((object.ReferenceEquals(this.PickupField, value) != true)) {
                    this.PickupField = value;
                    this.RaisePropertyChanged("Pickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Times {
            get {
                return this.n_TimesField;
            }
            set {
                if ((this.n_TimesField.Equals(value) != true)) {
                    this.n_TimesField = value;
                    this.RaisePropertyChanged("n_Times");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsertypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adress {
            get {
                return this.AdressField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressField, value) != true)) {
                    this.AdressField = value;
                    this.RaisePropertyChanged("Adress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usertype {
            get {
                return this.UsertypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UsertypeField, value) != true)) {
                    this.UsertypeField = value;
                    this.RaisePropertyChanged("Usertype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Campaign", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Campaign : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CampaignIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Date_fromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Date_toField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FundraiserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CampaignID {
            get {
                return this.CampaignIDField;
            }
            set {
                if ((this.CampaignIDField.Equals(value) != true)) {
                    this.CampaignIDField = value;
                    this.RaisePropertyChanged("CampaignID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date_from {
            get {
                return this.Date_fromField;
            }
            set {
                if ((object.ReferenceEquals(this.Date_fromField, value) != true)) {
                    this.Date_fromField = value;
                    this.RaisePropertyChanged("Date_from");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date_to {
            get {
                return this.Date_toField;
            }
            set {
                if ((object.ReferenceEquals(this.Date_toField, value) != true)) {
                    this.Date_toField = value;
                    this.RaisePropertyChanged("Date_to");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fundraiser {
            get {
                return this.FundraiserField;
            }
            set {
                if ((object.ReferenceEquals(this.FundraiserField, value) != true)) {
                    this.FundraiserField = value;
                    this.RaisePropertyChanged("Fundraiser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Registered", ReplyAction="http://tempuri.org/IService/RegisteredResponse")]
        bool Registered(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Registered", ReplyAction="http://tempuri.org/IService/RegisteredResponse")]
        System.Threading.Tasks.Task<bool> RegisteredAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Register", ReplyAction="http://tempuri.org/IService/RegisterResponse")]
        int Register(string name, string surname, string email, string address, string password, string usertype, string contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Register", ReplyAction="http://tempuri.org/IService/RegisterResponse")]
        System.Threading.Tasks.Task<int> RegisterAsync(string name, string surname, string email, string address, string password, string usertype, string contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        int Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getDonorDonations", ReplyAction="http://tempuri.org/IService/getDonorDonationsResponse")]
        CodingPackFrontRevised.ServiceReference.Donation[] getDonorDonations(int DonorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getDonorDonations", ReplyAction="http://tempuri.org/IService/getDonorDonationsResponse")]
        System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference.Donation[]> getDonorDonationsAsync(int DonorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddDonation", ReplyAction="http://tempuri.org/IService/AddDonationResponse")]
        bool AddDonation(int donorid, string type, string pickup, int ntimes, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddDonation", ReplyAction="http://tempuri.org/IService/AddDonationResponse")]
        System.Threading.Tasks.Task<bool> AddDonationAsync(int donorid, string type, string pickup, int ntimes, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllDonations", ReplyAction="http://tempuri.org/IService/getAllDonationsResponse")]
        CodingPackFrontRevised.ServiceReference.Donation[] getAllDonations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllDonations", ReplyAction="http://tempuri.org/IService/getAllDonationsResponse")]
        System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference.Donation[]> getAllDonationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllAdmin", ReplyAction="http://tempuri.org/IService/getAllAdminResponse")]
        CodingPackFrontRevised.ServiceReference.User[] getAllAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllAdmin", ReplyAction="http://tempuri.org/IService/getAllAdminResponse")]
        System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference.User[]> getAllAdminAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllDonors", ReplyAction="http://tempuri.org/IService/getAllDonorsResponse")]
        CodingPackFrontRevised.ServiceReference.User[] getAllDonors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllDonors", ReplyAction="http://tempuri.org/IService/getAllDonorsResponse")]
        System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference.User[]> getAllDonorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCampaign", ReplyAction="http://tempuri.org/IService/AddCampaignResponse")]
        bool AddCampaign(string name, string description, string datefrom, string dateto, string online, string fundraiser, string location, string timeto, string timefrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCampaign", ReplyAction="http://tempuri.org/IService/AddCampaignResponse")]
        System.Threading.Tasks.Task<bool> AddCampaignAsync(string name, string description, string datefrom, string dateto, string online, string fundraiser, string location, string timeto, string timefrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllCampaigns", ReplyAction="http://tempuri.org/IService/getAllCampaignsResponse")]
        CodingPackFrontRevised.ServiceReference.Campaign[] getAllCampaigns();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getAllCampaigns", ReplyAction="http://tempuri.org/IService/getAllCampaignsResponse")]
        System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference.Campaign[]> getAllCampaignsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : CodingPackFrontRevised.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<CodingPackFrontRevised.ServiceReference.IService>, CodingPackFrontRevised.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Registered(string email, string password) {
            return base.Channel.Registered(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisteredAsync(string email, string password) {
            return base.Channel.RegisteredAsync(email, password);
        }
        
        public int Register(string name, string surname, string email, string address, string password, string usertype, string contact) {
            return base.Channel.Register(name, surname, email, address, password, usertype, contact);
        }
        
        public System.Threading.Tasks.Task<int> RegisterAsync(string name, string surname, string email, string address, string password, string usertype, string contact) {
            return base.Channel.RegisterAsync(name, surname, email, address, password, usertype, contact);
        }
        
        public int Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public CodingPackFrontRevised.ServiceReference.Donation[] getDonorDonations(int DonorID) {
            return base.Channel.getDonorDonations(DonorID);
        }
        
        public System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference.Donation[]> getDonorDonationsAsync(int DonorID) {
            return base.Channel.getDonorDonationsAsync(DonorID);
        }
        
        public bool AddDonation(int donorid, string type, string pickup, int ntimes, string branch) {
            return base.Channel.AddDonation(donorid, type, pickup, ntimes, branch);
        }
        
        public System.Threading.Tasks.Task<bool> AddDonationAsync(int donorid, string type, string pickup, int ntimes, string branch) {
            return base.Channel.AddDonationAsync(donorid, type, pickup, ntimes, branch);
        }
        
        public CodingPackFrontRevised.ServiceReference.Donation[] getAllDonations() {
            return base.Channel.getAllDonations();
        }
        
        public System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference.Donation[]> getAllDonationsAsync() {
            return base.Channel.getAllDonationsAsync();
        }
        
        public CodingPackFrontRevised.ServiceReference.User[] getAllAdmin() {
            return base.Channel.getAllAdmin();
        }
        
        public System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference.User[]> getAllAdminAsync() {
            return base.Channel.getAllAdminAsync();
        }
        
        public CodingPackFrontRevised.ServiceReference.User[] getAllDonors() {
            return base.Channel.getAllDonors();
        }
        
        public System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference.User[]> getAllDonorsAsync() {
            return base.Channel.getAllDonorsAsync();
        }
        
        public bool AddCampaign(string name, string description, string datefrom, string dateto, string online, string fundraiser, string location, string timeto, string timefrom) {
            return base.Channel.AddCampaign(name, description, datefrom, dateto, online, fundraiser, location, timeto, timefrom);
        }
        
        public System.Threading.Tasks.Task<bool> AddCampaignAsync(string name, string description, string datefrom, string dateto, string online, string fundraiser, string location, string timeto, string timefrom) {
            return base.Channel.AddCampaignAsync(name, description, datefrom, dateto, online, fundraiser, location, timeto, timefrom);
        }
        
        public CodingPackFrontRevised.ServiceReference.Campaign[] getAllCampaigns() {
            return base.Channel.getAllCampaigns();
        }
        
        public System.Threading.Tasks.Task<CodingPackFrontRevised.ServiceReference.Campaign[]> getAllCampaignsAsync() {
            return base.Channel.getAllCampaignsAsync();
        }
    }
}
